name: onPullRequest

on:
  pull_request:
    types: [ closed, opened, synchronize ]

env:
  SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
  SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}

jobs:
  # Phase 1: Setup
  setup:
    container: node:16.4.0-buster-slim
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Cache npm cache on linux
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-setup-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-setup-
      - name: Installing node modules
        run: npm run ci:setup

  # Phase 2: Verify code
  lint:
    container: node:16.4.0-buster-slim
    if: github.event.action != 'closed'
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Cache npm cache on linux
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-setup-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-setup-
      - name: Installing node modules
        run: npm run ci:setup
      - name: Lint workspaces
        run: npm run workspaces:lint

  test:
    container: node:16.4.0-buster-slim
    if: github.event.action != 'closed'
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Cache npm cache on linux
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-setup-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-setup-
      - name: Installing node modules
        run: npm run ci:setup
      - name: Test workspaces
        run: npm run workspaces:test

  typecheck:
    container: node:16.4.0-buster-slim
    if: github.event.action != 'closed'
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Cache npm cache on linux
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-setup-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-setup-
      - name: Installing node modules
        run: npm run ci:setup
      - name: Type check workspaces
        run: npm run workspaces:typecheck

  # Phase 3: Build code
  build:
    container:
      image: node:16.4.0-buster-slim
      options: --user 1001
    if: github.event.action != 'closed'
    needs: [lint, setup, test, typecheck]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Cache npm cache on linux
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-setup-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-setup-
      - name: Installing node modules
        run: npm run ci:setup
      - name: Build projects
        run: npm run workspaces:build:dev
      - name: Pack build-dev artifact
        run: npm run ci:artifact:pack
      - name: Upload build-dev artifact
        uses: actions/upload-artifact@v2
        with:
          name: temp-build-dev-artifact
          path: build-artifact.zip
          retention-days: 1

  # Phase 4: End to end test with mock
  e2e_mock:
    container: cypress/included:7.7.0
    if: github.event.action != 'closed'
    needs: [build, lint, setup, test, typecheck]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Cache npm cache on linux
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-setup-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-setup-
      - name: Installing node modules
        run: npm run ci:setup
      - name: Download build-dev artifact
        uses: actions/download-artifact@v2
        with:
          name: temp-build-dev-artifact
      - name: Unpack build-dev artifact
        run: npm run ci:artifact:unpack
      - name: End to end test using mock
        run: npm run ci:test:e2e:mock

  # Phase 5: Deploy preview
  deploy_preview:
    container: node:16.4.0-buster-slim
    if: github.event.action != 'closed'
    needs: [build, e2e_mock, lint, setup, test, typecheck]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Cache npm cache on linux
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-setup-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-setup-
      - name: Installing node modules
        run: npm run ci:setup
      - uses: actions/download-artifact@v2
        with:
          name: temp-build-dev-artifact
      - name: Unpack build artifact
        run: npm run ci:artifact:unpack
      - name: Set environmental variables
        run: echo "SITE_DOMAIN=gnowth-boilerplate-$GITHUB_SHA.surge.sh" >> $GITHUB_ENV
      - name: Deploy to preview
        run: npm run ci:deploy
      # TODO: show comment in PR with deploy link

  # Phase 6: End to end smoke
  e2e_smoke:
    container: cypress/included:7.7.0
    if: github.event.action != 'closed'
    needs: [build, deploy_preview, e2e_mock, setup]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Cache npm cache on linux
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-setup-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-setup-
      - name: Installing node modules
        run: npm run ci:setup
      - name: Set environmental variables
        run: echo "SITE_DOMAIN=gnowth-boilerplate-$GITHUB_SHA.surge.sh" >> $GITHUB_ENV
      - name: End to end smoke test
        run: npm run ci:test:e2e:smoke

  # Phase A: Clean preview environment
  close_pr:
    container: node:16.4.0-buster-slim
    if: github.event.action == 'closed'
    needs: [build, deploy_preview, e2e_mock, setup]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Cache npm cache on linux
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-setup-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-setup-
      - name: Installing node modules
        run: npm run ci:setup
      - name: Set environmental variables
        run: echo "SITE_DOMAIN=gnowth-boilerplate-$GITHUB_SHA.surge.sh" >> $GITHUB_ENV
      - name: Deploy to preview
        run: npm run ci:deploy:cleanup
