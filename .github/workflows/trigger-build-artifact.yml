# https://trstringer.com/github-actions-create-release-upload-artifacts/
# https://medium.com/@thorstensuckow/downloadable-assets-with-github-actions-e39b76371337
# https://github.com/softprops/action-gh-release
name: triggerBuildArtifact

env:
  # Note: to be removed when backend is available
  NEXT_PUBLIC_ENV: development

on:
  workflow_dispatch:
    inputs:
      pre_release:
        description: Create a pre release (YES/no)?
        default: 'yes'
        required: false

jobs:
  # Phase 1: Branch check
  check_branch:
    runs-on: ubuntu-latest
    timeout-minutes: 8
    steps:
      - name: Cancelling - Branch must be a release branch
        if: ${{ !startsWith( github.ref, 'refs/heads/release-' ) }}
        uses: andymckay/cancel-action@0.5

      - name: Cancelling - Input [Pre Release] is invalid
        if: ${{ github.event.inputs.pre_release != 'no' && github.event.inputs.pre_release != 'yes' }}
        uses: andymckay/cancel-action@0.5

  # Phase 2: Build artifact
  build_artifact:
    container:
      image: node:20.18.0-bullseye-slim
      options: --user 1001
    needs: check_branch
    runs-on: ubuntu-latest
    timeout-minutes: 8
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ./.github/actions/workspace-setup

      - name: Set git identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Pre release - Tag branch and create change log
        if: github.event.inputs.pre_release != 'no'
        run: npm run cd:code:version-pre

      - name: Release - Tag branch and create change log (require a pre-release)
        if: github.event.inputs.pre_release == 'no'
        run: npm run cd:code:version

      # Note: needs to be after version in case we use version in our build
      - name: Build projects
        run: npm run ci:build

      - name: Build artifact for release
        run: npm run cd:artifact:zip

      - name: Set version to environment variable
        run: |
          ARTIFACT_VERSION=$(node -p 'require("./package.json").version')
          echo "ARTIFACT_VERSION=${ARTIFACT_VERSION}" >> $GITHUB_ENV

      - name: Upload release artifact
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: artifact.zip
          asset_name: artifact.zip
          tag: refs/tags/gnowth@${{ env.ARTIFACT_VERSION }}
          overwrite: true
          body: Release artifact
