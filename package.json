{
  "author": "Thierry Wong",
  "bugs": "https://github.com/gnowth/smart/issues",
  "description": "Boilerplate",
  "license": "AGPL-3.0-only",
  "name": "gnowth",
  "prettier": "@gnowth/prettier-config",
  "private": true,
  "version": "0.0.0",
  "repository": "https://github.com/gnowth/smart.git",
  "homepage": "https://github.com/gnowth/smart#readme",
  "workspaces": [
    "./packages/*"
  ],
  "eslintConfig": {
    "extends": [
      "@gnowth/eslint-config"
    ],
    "ignorePatterns": [
      "**/coverage",
      "**/dist"
    ],
    "root": true
  },
  "engines": {
    "node": "18.6.0",
    "npm": "8.13.2"
  },
  "jest": {
    "preset": "@gnowth/jest-config"
  },
  "lint-staged": {
    "*.{css,json,md,scss}": "prettier --write",
    "*.{js,jsx,ts,tsx}": "eslint --fix"
  },
  "renovate": {
    "extends": [
      "config:base"
    ],
    "ignoreDeps": [
      "npm"
    ]
  },
  "dependencies": {
    "@commitlint/cli": "17.0.3",
    "@commitlint/config-conventional": "17.0.3",
    "@gnowth/eslint-config": "0.0.0",
    "@gnowth/jest-config": "0.0.0",
    "@gnowth/prettier-config": "0.0.0",
    "@gnowth/typescript-config": "0.0.0",
    "concurrently": "7.3.0",
    "github-markdown-css": "5.1.0",
    "husky": "8.0.1",
    "lerna": "5.2.0",
    "lint-staged": "13.0.3",
    "netlify-cms-proxy-server": "1.3.24",
    "npm-check-updates": "16.0.0",
    "serve": "14.0.1",
    "start-server-and-test": "1.14.0",
    "surge": "0.23.1",
    "ts-jest": "28.0.7"
  },
  "devDependencies": {
    "eslint": "8.20.0",
    "prettier": "2.7.1",
    "typescript": "4.7.4"
  },
  "scripts": {
    "ci:database:backup": "echo database to backup",
    "ci:database:fixture": "echo database to add fixtures",
    "ci:database:migrate": "echo migrate database",
    "ci:database:migrate:back": "echo migrate database back",
    "ci:deploy": "surge --project ./packages/boilerplate-nextjs/dist --domain $SITE_DOMAIN",
    "ci:deploy:cleanup": "surge teardown $SITE_DOMAIN",
    "ci:infrastructure:clean:temp": "echo clean temp infrastructure",
    "ci:infrastructure:provision": "echo provision infrastructure",
    "ci:publish": "lerna publish from-package --yes",
    "ci:publish:dry": "echo publish dry run",
    "ci:serve": "serve -l 3000 packages/boilerplate-nextjs/dist",
    "ci:setup": "npm ci --cache ~/.cache --prefer-offline",
    "ci:test:mock": "CYPRESS_BASEURL=http://localhost:3000 start-server-and-test ci:serve http://localhost:3000 ci:test:regression",
    "ci:test:regression": "npm run project:cypress test:regression",
    "ci:test:regression:chrome": "npm run project:cypress test:regression:chrome",
    "ci:test:regression:chrome:mobile": "npm run project:cypress test:regression:chrome:mobile",
    "ci:test:regression:firefox": "npm run project:cypress test:regression:firefox",
    "ci:test:regression:firefox:mobile": "npm run project:cypress test:regression:firefox:mobile",
    "ci:test:smoke": "npm run project:cypress test:smoke",
    "ci:version": "lerna version --exact --conventional-commits --conventional-graduate --yes",
    "ci:version:pre": "lerna version --exact --conventional-commits --conventional-prerelease --yes",
    "env:local": "export $(cat .env.local | xargs)",
    "git:delete:dev": "git branch -d $(git branch -l dev-*)",
    "git:fetch": "git fetch --prune",
    "git:rebase": "git pull --rebase origin main",
    "git:tag:delete": "git tag -d $(git tag -l *gnowth*)",
    "git:view": "git log --all --graph --decorate --pretty=oneline --abbrev-commit",
    "local:analyze": "npm run project:nextjs build:analyze",
    "local:clean": "npm run local:clean:temp && npm run local:clean:modules",
    "local:clean:modules": "lerna clean --yes",
    "local:clean:temp": "lerna run clean:temp && lerna run clean:log && rm -rf coverage",
    "local:format": "prettier --write **/*.{js,jsx,ts,tsx,css,json,md,scss}",
    "local:lint": "eslint --ext js,jsx,cjs,mjs,ts,tsx,mdx .",
    "local:start:dev": "npm run project:nextjs start:dev",
    "local:start:dev:cms": "concurrently 'netlify-cms-proxy-server' 'npm run project:nextjs start:dev'",
    "local:start:docker": "docker-compose -f ./configs/docker-compose.yml up",
    "local:test:regression": "CYPRESS_BASEURL=http://localhost:3000 npm run project:cypress test:regression",
    "local:test:smoke": "CYPRESS_BASEURL=http://localhost:3000 npm run project:cypress test:smoke",
    "local:test:unit": "jest",
    "local:typecheck": "tsc",
    "local:verify": "npm run local:lint && npm run local:typecheck && npm run local:test:unit",
    "prepare": "if test \"$CI\" != true; then husky install; fi",
    "project:cypress": "npm run --workspace=@boilerplate/cypress",
    "project:eslint": "npm run --workspace=@gnowth/eslint-config",
    "project:nestjs": "npm run --workspace=@boilerplate/nestjs",
    "project:nextjs": "npm run --workspace=@boilerplate/nextjs",
    "project:prettier": "npm run --workspace=@gnowth/prettier-config",
    "project:typescript": "npm run --workspace=@gnowth/typescript-config",
    "setup": "npm install --frozen-lockfile",
    "setup:refresh": "rm -rf package-lock.json && npm run local:clean && npm install",
    "setup:packages": "ncu --interactive --deep --reject '@gnowth/*'",
    "workspaces:build": "lerna run build",
    "workspaces:build:dev": "lerna run build:dev",
    "workspaces:lint": "lerna run lint",
    "workspaces:test": "lerna run test",
    "workspaces:typecheck": "lerna run typecheck"
  }
}
