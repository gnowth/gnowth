import type { FunctionComponent, ReactNode } from 'react'
import type { QueryClient } from 'react-query'
import { compose, withErrorBoundary, withSuspense } from '@app/core'
import { ProviderRecipe } from '@app/recipes'
import { ChakraProvider } from '@chakra-ui/react'
import { QueryClientProvider } from 'react-query'
import { RecoilRoot } from 'recoil'
import Head from 'next/head'

import SystemToasts from '../components/system-toasts'

type Props = {
  children: ReactNode
  queryClient: QueryClient
}

type PropsWrapper = {
  children: ReactNode
}

const Wrapper = compose(withSuspense(), withErrorBoundary)((props: PropsWrapper) => <>{props.children}</>)

const LayoutApp: FunctionComponent<Props> = (props) => {
  return (
    <RecoilRoot>
      <QueryClientProvider client={props.queryClient}>
        <ChakraProvider>
          <ProviderRecipe>
            <Wrapper>
              <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
              </Head>

              <SystemToasts />

              {props.children}
            </Wrapper>
          </ProviderRecipe>
        </ChakraProvider>
      </QueryClientProvider>
    </RecoilRoot>
  )
}

export default LayoutApp
