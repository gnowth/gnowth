import type { AppProps } from 'next/app'
import type { AxiosError } from 'axios'
import { Box, ChakraProvider, Flex } from '@chakra-ui/react'
import { QueryCache, QueryClient, QueryClientProvider } from 'react-query'
import { RecoilRoot } from 'recoil'
import Head from 'next/head'
import dynamic from 'next/dynamic'

import SectionFooter from '../views/section-footer'
import SectionHeader from '../views/section-header'
import ViewProgressGlobal from '../views/view-progress-global'
import ViewToastErrors, { streamErrors } from '../views/view-toast-errors'
import ViewToastNotifications from '../views/view-toast-notifications'
import makeServer from '../services/make-server'

if (process.env.NODE_ENV === 'development') {
  makeServer({ environment: 'development' })
}

const queryClient = new QueryClient({
  queryCache: new QueryCache({ onError: (error: unknown) => streamErrors.actions.addError(error as Error) }),
  defaultOptions: {
    queries: {
      refetchOnWindowFocus: false,
      useErrorBoundary: (error: unknown) => ((error as AxiosError).response?.status ?? 0) >= 500,
    },
  },
})

function MyApp(props: AppProps) {
  const { Component } = props

  return (
    <RecoilRoot>
      <QueryClientProvider client={queryClient}>
        <ChakraProvider>
          <Head>
            <title>Create Next App</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>

          <Flex direction="column" minHeight="100vh">
            <SectionHeader />

            <ViewProgressGlobal />

            <ViewToastErrors />

            <ViewToastNotifications />

            <Box flex={1} mt="5">
              <Component {...props.pageProps} />
            </Box>

            <SectionFooter mt="5" />
          </Flex>
        </ChakraProvider>
      </QueryClientProvider>
    </RecoilRoot>
  )
}

export default dynamic(() => Promise.resolve(MyApp), {
  ssr: false,
})
