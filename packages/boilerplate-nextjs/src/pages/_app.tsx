import type { NextPage } from 'next'
import type { AppProps } from 'next/app'
import type { ComponentType } from 'react'
import { ChakraProvider } from '@chakra-ui/react'
import { QueryClientProvider } from 'react-query'
import { RecoilRoot } from 'recoil'
import Head from 'next/head'
import dynamic from 'next/dynamic'

import FrameDefault from '../views/frame-default'
import SystemToasts from '../views/system-toasts'
import TinaProvider from '../components/tina-provider-dynamic'
import runSetup from '../setup'

const setup = runSetup()

interface Props extends AppProps {
  Component: NextPage & {
    Layout?: ComponentType
  }
}

function MyApp(props: Props) {
  return (
    <RecoilRoot>
      <QueryClientProvider client={setup.queryClient}>
        <ChakraProvider>
          <TinaProvider>
            <Head>
              <title>Create Next App</title>
              <meta name="description" content="Generated by create next app" />
              <link rel="icon" href="/favicon.ico" />
            </Head>

            <SystemToasts />

            <FrameDefault component={props.Component}>
              <props.Component {...props.pageProps} />
            </FrameDefault>
          </TinaProvider>
        </ChakraProvider>
      </QueryClientProvider>
    </RecoilRoot>
  )
}

// DEBT(workaround): Streaming must be unabled to use Suspense. https://nextjs.org/docs/advanced-features/react-18/streaming
export default dynamic(() => Promise.resolve(MyApp), { ssr: false })
